if(Sys.info()["nodename"]=="ANR-SEARSJA1-1D"){
maindir <- "C:/Users/searsja1/Michigan State University/Sears, Molly - N Application CA/"
}else if(Sys.info()["nodename"]=="DESKTOP-SHT9660"){
maindir <- "C:/Users/james/Michigan State University/Sears, Molly - N Application CA/"
} else {
maindir <- "F:/Michigan State University/Sears, Molly - N Application CA/"
}
setwd(maindir)
options(stringsAsFactors = F, scipen = 999)
pacman::p_load(haven, readxl, stringr, tidyverse)
AR_18_22 <- read_csv(paste0(maindir, "Cleaner Data/FieldLevelAR_2018_2022.csv"))
prac_19_22 <- read_csv(paste0(maindir, "Cleaner Data/INMP_Field_2019_2022.csv"))
INMP_AR_18_22 <- full_join(prac_19_22, AR_18_22,
by = c("MemberID", "Year", "SpecificCrop", "Field"))
## check for duplicates ==> none
INMP_dup <- group_by(INMP_AR_18_22, MemberID, Field, SpecificCrop, Year) %>%
filter(n()>1)
rm(INMP_dup)
INMP_AR_18_22_full <- drop_na(INMP_AR_18_22, Late_Prac, Late_AR)
missing_prac <- filter(AR_18_21, Year > 2018) %>%
anti_join(prac_19_21, by = c("MemberID", "Year", "SpecificCrop", "Field"))
missing_prac <- filter(AR_18_22, Year > 2018) %>%
anti_join(prac_19_21, by = c("MemberID", "Year", "SpecificCrop", "Field"))
missing_prac <- filter(AR_18_22, Year > 2018) %>%
anti_join(prac_19_22, by = c("MemberID", "Year", "SpecificCrop", "Field"))
View(missing_prac)
# In total, 39,800 observations including matched and unmatched entries
INMP_AR_18_22_full <- drop_na(INMP_AR_18_22, MemberID, Year, SpecificCrop, Field)
View(INMP_AR_18_22_full)
View(prac_19_22)
INMP_AR_18_22_full <- drop_na(INMP_AR_18_22, Late_Prac, Late_AR)
prac_22  <- read_xlsx(paste0(maindir, "Raw Data/ILRP_2023_AMPINAR_AMRs/ESJWQC_2023_AMPINAR_AttachmentA_ManagementPracticeImpltData.xlsx"),
sheet = "2022_INMP_SR",
col_names = c("MemberID", "Year", "SpecificCrop", "Field",
"CertMethod", "MultiYearOutlier", "Question", "Response"),
col_types = c("text", "numeric", "text", "numeric",
"text", "text","text", "text"),
skip = 1 # skip first row with column names
)
View(prac_22)
?pivot_wider
## Save out the combined file
## Drop unmerged Nitrogen obs, drop unmerged INMP obs from 19-21, keep 18 nitrogen
INMP_AR_18_22 <- drop_na(INMP_AR_18_22, Late_AR) %>% # drop unmerged nitrogen
filter(!is.na(Late_Prac) | (is.na(Late_Prac) & Year == 2018))
# dropped unmerged INMP obs from 19-21, keep 18 nitrogen ==> 27566 obs
write_csv(INMP_AR_18_22, paste0(maindir, "Cleaner Data/INMP_AR_2018_2022.csv"))
rm(list=ls())
options(htmltools.dir.version = FALSE)
library(knitr)
library(fontawesome)
knitr::opts_chunk$set(
fig.align = "center",
cache = FALSE,
dpi = 300,
warning = F,
message = F,
fig.height = 5,
out.width = "80%"
)
left_join(
flights,
planes, ## Not renaming "year" to "year_built" this time
by = "tailnum"
) %>%
select(contains("year"), month, day, dep_time, arr_time, carrier, flight, tailnum, type, model) %>%
head(3)
options(htmltools.dir.version = FALSE)
library(knitr)
library(fontawesome)
knitr::opts_chunk$set(
fig.align = "center",
cache = FALSE,
dpi = 300,
warning = F,
message = F,
fig.height = 5,
out.width = "80%"
)
library(tidyverse)
tidyverse_packages()
rm(cars, german_cars, german_cars_grp)
```
---
# Without Pipes: 2. Nest
The nested aproach is harder to read and .hi-medgrn[totally inverts the logical order]
mpg %>%
filter(manufacturer %in% c("audi", "volkswagen")) %>%
group_by(manufacturer, model) %>%
summarise(hwy_mean = mean(hwy))
packageVersion('dplyr')
# install.packages('dplyr') ## install updated version if < 1.0.0
starwars %>%
filter(
species == "Human",
height >= 190
)
starwars %>%
filter(grepl("Skywalker", name))
starwars %>%
filter(str_detect(name, "Skywalker"))
```
---
# Identifying Missing Data
A very common `filter` use case is identifying (or removing) observation with missing values
starwars %>%
filter(is.na(height))
dim(starwars)
starwars %>%
drop_na(height) %>%
dim()
starwars %>%
arrange(birth_year) %>%
head()
starwars %>%
arrange(desc(birth_year))
```
---
# 2) dplyr::arrange
We can also nested sort by including multiple variables
starwars %>%
arrange(desc(birth_year))
starwars %>%
select(name:skin_color, species, -height)
starwars %>%
select(alias=name, crib=homeworld, gender) %>%
head()
starwars %>%
select(name, contains("color"))
starwars %>%
select(species, homeworld, everything()) %>%
head(5)
starwars %>%
relocate(
ends_with("_color"), homeworld
) %>%
head()
starwars %>%
relocate(
species,
.before = height
) %>%
head()
starwars %>%
select(name, birth_year) %>%
mutate(dog_years = birth_year * 7) %>%
head()
starwars %>%
select(name, birth_year) %>%
mutate(
dog_years = birth_year * 7, ## Separate with a comma
comment = paste0(name, " is ", dog_years, " in dog years.")
) %>% head()
starwars %>%
select(name, height) %>%
filter(name %in% c("Luke Skywalker", "Anakin Skywalker")) %>%
mutate(tall1 = height > 180) %>%
mutate(tall2 = ifelse(height > 180, "Tall", "Short")) ## Same effect, but can choose labels
starwars %>%
select(name:eye_color) %>%
mutate(across(where(is.character), toupper)) %>% #<<
head(5)
starwars %>%
group_by(species, gender) %>%
summarise(mean_height = mean(height, na.rm = TRUE))
## Probably not what we want
starwars %>%
summarise(mean_height = mean(height))
## Much better
starwars %>%
summarise(mean_height = mean(height, na.rm = TRUE))
```
---
# 5) dplyr::summarise
The same `across`-based workflow that we saw with `mutate` a few slides back also works with `summarise`. For example:
starwars %>%
group_by(species) %>%
summarise(across(where(is.numeric), mean, na.rm=T)) %>% #<<
head(5)
```
---
# Other dplyr Goodies:
`group_by` and `ungroup`: For (un)grouping.
- Particularly useful with the `summarise` and `mutate` commands, as we've already seen.
starwars %>%
group_by(species) %>%
mutate(species_mass = mean(mass, na.rm = T),
species_mass_diff = mass - species_mass) %>%
select(name, starts_with("species")) %>%
ungroup() %>% head()
```
---
# Other dplyr Goodies: slice
`slice`: Subset rows by position rather than filtering by values.
starwars %>%
slice(c(1,5))
starwars %>%
filter(gender=="female") %>%
pull(height)
starwars %>% count(species)
starwars %>% distinct(species)
starwars %>% group_by(species) %>% mutate(num = n())
library(nycflights13)
head(flights)
head(planes)
left_join(flights, planes) %>%
select(year:dep_time, carrier, flight, tailnum, type, model, engine)
left_join(
flights,
planes %>% rename(year_built = year),
by = "tailnum" ## Be specific about the joining column #<<
) %>%
select(year, month, day, dep_time, arr_time, carrier, flight, tailnum, year_built, type, model) %>%
head(3) ## Just to save vertical space on the slide
pacman::p_load(nycflights13, tidyverse)
left_join(
flights,
planes, ## Not renaming "year" to "year_built" this time
by = "tailnum"
) %>%
select(contains("year"), month, day, dep_time, arr_time, carrier, flight, tailnum, type, model) %>%
head(3)
weather_sub <- select(weather, year, month, day, hour, temp, humid, starts_with("wind"))
View(weather_sub)
flights <- mutate(flights,
dep_hr = case_when(
nchar(dep_time) == 3 ~ substr(dep_time,1,1) %>% as.numeric(),
nchar(dep_time) == 4 ~ substr(dep_time,1,2) %>% as.numeric(),
TRUE ~ as.numeric(NA)
)
)
View(flights)
View(weather_sub)
left_join(
flights,
weather_sub,
by = c("year" = "year", "month" = "month", "day" = "day", "dep_hr" = "hour") ## Be specific about the joining column ("Xname" = "Yname")
) %>%
#select(year, month, day, dep_hr, flight, temp, humid) %>%
head(3) ## Just to save vertical space on the slide
stocks <- data.frame( ## Could use "tibble" instead of "data.frame" if you prefer
time = as.Date('2009-01-01') + 0:1,
X = rnorm(2, 0, 1),
Y = rnorm(2, 0, 2),
Z = rnorm(2, 0, 4)
)
View(stocks)
stocks %>% pivot_longer(-time, names_to="stock", values_to="price")
?pivot_longer
pivot_longer(stocks, X:Z, names_to="stock", values_to="price")
## Write out the argument names this time: i.e. "names_to=" and "values_to="
tidy_stocks <-  pivot_longer(stocks, -time, names_to="stock", values_to="price")
rev <- data.frame(
year = rep(2016, times = 4),
month = rep(1, times = 4),
day = 1:4,
revenue = rnorm(4, mean = 100, sd = 10)
)
## Combine "yr", "mnth", and "dy" into one "date" column
rev_u <- rev %>% unite(col = date, # name of new column
c("month", "day","year", ), # columns to unite
sep = "-") # separator to use
View(rev_u)
## Combine "yr", "mnth", and "dy" into one "date" column
rev_u <- rev %>% unite(col = date, # name of new column
c("month", "day","year", ), # columns to unite
sep = "-",
remove = F) # separator to use
View(rev_u)
rev_u2 <- mutate(rev,
date = paste(month, day, year, sep = "/")
)
View(rev_u2)
View(rev_u)
## Combine "yr", "mnth", and "dy" into one "date" column
rev_u <- rev %>% unite(col = date, # name of new column
c("month", "day","year", ), # columns to unite
sep = "-",
remove = T) # separator to use
View(rev_u)
rev_b <- separate_wider_delim(rev_u,
c("month", "day", "year"),
sep = "-")
rev_b <- separate_wider_delim(rev_u,
names = c("month", "day", "year"),
delim = "-")
pacman:p_load(tidyverse, tidyr)
pacman::p_load(tidyverse, tidyr)
rev_b <- separate_wider_delim(rev_u,
names = c("month", "day", "year"),
delim = "-")
pacman::p_load(tidyverse, tidyr)
install.packages(c("tidyr", "tidyverse"))
detach("package:tidyr", unload = TRUE)
detach("package:tidyverse", unload = TRUE)
install.packages(c("tidyr", "tidyverse"))
library(tidyr)
library(tidyverse)
options(htmltools.dir.version = FALSE)
library(knitr)
library(fontawesome)
knitr::opts_chunk$set(
fig.align = "center",
cache = FALSE,
dpi = 300,
warning = F,
message = F,
fig.height = 5,
out.width = "80%"
)
rev_b <- separate_wider_delim(rev_u,
names = c("month", "day", "year"),
delim = "-")
rev_b <- separate_wider_delim(rev_u,
date,
names = c("month", "day", "year"),
delim = "-")
setwd("C:/Users/james/OneDrive - Michigan State University/Github/AFRE-891-SS24/AFRE-891-SS24/Lecture-Slides/04-Cleaning")
getwd()
setwd("C:/Users/james/OneDrive - Michigan State University/Github/AFRE-891-SS24/AFRE-891-SS24/Lecture-Slides/04-Cleaning")
options(htmltools.dir.version = FALSE)
library(knitr)
library(fontawesome)
knitr::opts_chunk$set(
fig.align = "center",
cache = FALSE,
dpi = 300,
warning = F,
message = F,
fig.height = 5,
out.width = "80%"
)
col <- read_csv("data/colleges.csv")
col <- read_csv("data/colleges.csv",
col_types =  "dccccciic"
)
View(col)
col <- read_csv("data/colleges.csv",
col_types = list(
date = col_date(),
state = col_character(),
county = col_character(),
city = col_character(),
ipeds_id = col_character(),
college = col_character(),
cases = col_integer(),
cases_2021 = col_integer(),
notes = col_character()
))
View(col)
View(col)
col %>%
group_by(state) %>%
summarise(total_state_cases = sum(cases, na.rm=T)) %>%
arrange(total_state_cases)
state_tab <- group_by(col, state) %>%
summarise(total_cases = sum(cases, na.rm = T)) %>%
arrange(desc(total_cases)) %>%
ungroup() %>%
filter(row_number() <= 10)
View(state_tab)
rm(list=ls())
